# ðŸ“Œ Firebase FCM â€“ Flutter Interview Q&A Cheatsheet

**Q1. What is FCM?**  
ðŸ‘‰ Firebase Cloud Messaging, a service to send push notifications to mobile devices.  

---

**Q2. Steps to set up FCM in Flutter?**  
ðŸ‘‰  
1. Add `firebase_core` + `firebase_messaging`.  
2. Add `google-services.json` / `GoogleService-Info.plist`.  
3. Initialize Firebase in `main.dart`.  
4. Request notification permissions.  
5. Get FCM token and listen for messages.  

---

**Q3. How do you get device token?**  
ðŸ‘‰  
```dart
String? token = await FirebaseMessaging.instance.getToken();
```  

---

**Q4. What are app states for notifications?**  
ðŸ‘‰  
- **Foreground** â†’ `onMessage` fires (no auto system notification).  
- **Background** â†’ System shows notification automatically.  
- **Terminated** â†’ Notification shows, tap gives data via `getInitialMessage()`.  

---

**Q5. Why use `flutter_local_notifications`?**  
ðŸ‘‰ Because Android does not show notifications in foreground.  

---

**Q6. Notification vs Data payload?**  
ðŸ‘‰  
- **Notification payload** â†’ auto system notification (background/terminated).  
- **Data payload** â†’ only key-values; app must handle and show manually.  

---

**Q7. Handle notification tap (background/terminated)?**  
ðŸ‘‰  
```dart
FirebaseMessaging.onMessageOpenedApp.listen((msg) { ... });
RemoteMessage? initial = await FirebaseMessaging.instance.getInitialMessage();
```  

---

**Q8. Handle background messages?**  
ðŸ‘‰  
```dart
Future<void> _bgHandler(RemoteMessage msg) async {
  print("Background: ${msg.messageId}");
}
FirebaseMessaging.onBackgroundMessage(_bgHandler);
```  

---

**Q9. Where to store token?**  
ðŸ‘‰ Save in backend (e.g., Firestore) linked to user, so you can send targeted notifications.  

---

**Q10. Common issues?**  
ðŸ‘‰  
- No foreground notification â†’ need local notifications.  
- Forgot permission request (Android 13, iOS).  
- Token refresh not handled â†’ must update backend.  
